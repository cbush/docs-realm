=============
Support Files
=============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

Realm stores data on the filesystem in **support files**.
Generally, you should not interact with these files
directly. Instead, access these files through the Realm SDK
or Realm Studio. In advanced cases, you might need to manually
delete the support files. Otherwise, these are
implementation details that you can safely ignore, presented
here only for the curious.

Support File Types
------------------

Realm's internal operation depends on several support file
types:

``<path>.realm``:
  The **realm file** contains the data and metadata of the
  realm at the given :ref:`Realm path <realm-path>`. Each
  app can have several realms at different paths, each with
  their own realm file.

``<name>.realm.lock``:
  The **lock file** enables synchronization between writes.

``<name>.realm.note``:
  The **note file** is a :wikipedia:`named pipe
  <Named_pipe>` for inter-thread and inter-process
  notifications. While usually completely internal, it has
  been known to cause the "unsupported resource found" error
  in iOS builds when it is accidentally added to the app
  bundle, e.g. when bundling a realm file with the app. If
  that happens, delete the pipe.

``<name>.realm.management``:
  The **management directory** contains internal files for
  the realm's state management.

Manually Deleting Support Files
-------------------------------

In some circumstances, you might need to delete the support
files. You may delete support files when the realm is
closed. Deleting any of a realm's files while the realm is
open may corrupt the realm or disrupt :doc:`Sync
</sync/sync-overview>`.

Client Reset Scenario
~~~~~~~~~~~~~~~~~~~~~

When using :doc:`Realm Sync </sync/sync-overview>`, a **client
reset** is a serious error recovery task that your client
app must perform in the following situation:

- The given synced realm on the server was restored from a backup. For example, due to a Realm server crash.
- The client app made changes to that realm since the backup was made, but did not sync those changes back to the server before the server was restored.

In other words, the client app must carry out a client reset
on a given synced realm if the server is restored to a
version before the version on the client.

On the client app side, the client reset procedure is as follows:

1. Create a backup of the local realm file.
#. Delete the local realm file.
#. The next time the app connects to the server and opens that realm, the app will download a fresh copy of the realm file. The local changes made since the backup on the server are not reflected in the new file.
